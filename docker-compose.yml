version: "3.7"

networks:
  backend:
    attachable: true
    name: mohaymen

services:
  data_validation:
    container_name: "data_validation"
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - zookeeper
      - kafka
    image: "data_validation"
    networks:
      - backend
    volumes:
      - ".:/app/"
    command: [ "python3" , "/app/main.py" ,"/app/schema.json" ]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - backend
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    networks:
      - backend
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  mongodb:
    image: mongo
    container_name: "mongodb"
    hostname: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./storage/mongo/data:/data/db
      - ./storage/mongo/lib:/var/lib/mongodb
    env_file:
      - .env
    networks:
      - backend


